language: python
python:
  - "3.6"
  - "3.7"
  - "3.8"
  - "3.9"

env:
  global:
    - HYDRA_LAUNCHER=fork
    - OMPI_MCA_rmaps_base_oversubscribe=yes
    - MPI=mpich

before_install:
    - sudo apt-get update -q
    - python$PY -m pip install Cython
    - python$PY -m pip install numpy
    - python$PY --version
    - python$PY -m cython --version
    - python$PY -c "import numpy;print(numpy.__version__)"


# install parsl with no optional extras
install:
    - make deps

# Os tests
os:
    - linux

# command to run tests
script:
      # do this before any testing, but not in-between tests
    - make clean_coverage

    # run the make targets for the two supported targets.
    - make test

    # documentation checks:

    - pip install .[docs]
    - sudo apt-get install -y pandoc
    - cd docs

    # check that the stubs directory does not exist, to protect against
    # accidentally added stubs files - stubs are generated by sphinx doc
    # build.
    - test ! -e stubs

    # check we can build the docs without warnings
    - make SPHINXOPTS=-W html

    - cd ..

    # assert that none of the runs in this test have put an ERROR message into a
    # database manager log file or monitoring router log file. It would be better if
    # the tests themselves failed immediately when there was a monitoring error, but
    # in the absence of that, this is a dirty way to check.
    - bash -c '! grep ERROR runinfo*/*/database_manager.log'
    - bash -c '! grep ERROR runinfo*/*/monitoring_router.log'

    # Check that parsl-visualize does not give errors.
    # 'monitoring.db' needs to exist and have some interesting content in it
    # which at time of writing comes from the htex_local_alternative test
    # run.
    - sudo apt-get install -y graphviz
    - pip install .[monitoring]
    - parsl/tests/test-viz.sh

    # run simple worker test. this is unlikely to scale due to
    # a stdout/stderr buffering bug in present master.
    # - coverage run --append --source=parsl parsl/tests/manual_tests/test_worker_count.py -c 1000
    # TODO: ^ this test has been removed pending investigation ... when restored or removed,
    #       sort out this commented out block appropriately.

    # prints report of coverage data stored in .coverage
    - make coverage
