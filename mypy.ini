[mypy]
plugins = sqlalchemy.ext.mypy.plugin

enable_error_code = ignore-without-code
no_implicit_reexport = True
warn_redundant_casts = True

no_implicit_optional = True

strict_equality = True
warn_unused_ignores = True
warn_unreachable = True

[mypy-non_existent.*]
ignore_missing_imports = True

# some subpackages in parsl are fully typed and should be checked with much
# stricter type checking options - a longer term goal might be for all of
# parsl to be checked that way, so these options could be default instead of
# listed per package; but unless/until that happens, the more-strictly-checked
# code should be listed here:

[mypy-parsl.addresses.*]
disallow_untyped_defs = True
disallow_any_decorated = True

[mypy-parsl.app.app.*]
disallow_untyped_defs = True

[mypy-parsl.dataflow.errors.*]
disallow_untyped_defs = True
disallow_any_expr = True
disallow_any_decorated = True

[mypy-parsl.dataflow.futures.*]
disallow_untyped_defs = True
disallow_any_decorated = True

[mypy-parsl.dataflow.memoization.*]
disallow_untyped_defs = True

[mypy-parsl.dataflow.rundirs.*]
disallow_untyped_defs = True
disallow_any_expr = True
disallow_any_decorated = True

[mypy-parsl.dataflow.states.*]
disallow_untyped_defs = True
disallow_any_expr = True
disallow_any_decorated = True

[mypy-parsl.dataflow.taskrecord.*]
disallow_untyped_defs = True
disallow_any_expr = True
disallow_any_decorated = True

[mypy-parsl.providers.base.*]
disallow_untyped_decorators = True
check_untyped_defs = True
disallow_subclassing_any = True
disallow_untyped_defs = True

[mypy-parsl.serialize.*]
disallow_untyped_decorators = True
check_untyped_defs = True
disallow_subclassing_any = True
disallow_untyped_defs = True

[mypy-parsl.serialize.proxystore.*]
# parsl/serialize/proxystore.py:9: error: Class cannot subclass "Pickler" (has type "Any") 
disallow_subclassing_any = False

[mypy-parsl.executors.base.*]
disallow_untyped_defs = True
disallow_any_expr = True

[mypy-parsl.executors.high_throughput.interchange.*]
disallow_untyped_defs = True

[mypy-parsl.monitoring.*]
disallow_untyped_decorators = True
check_untyped_defs = True
disallow_subclassing_any = True
disallow_untyped_defs = True

# visualization typechecks much less well than the rest of monitoring,
# so reduce strictness for the visualization subtree.
[mypy-parsl.monitoring.visualization.*]
ignore_errors = True

[mypy-parsl.tests.configs.local_user_opts]
ignore_missing_imports = True

[mypy-parsl.usage_tracking]
check_untyped_defs = True
disallow_subclassing_any = True
disallow_untyped_decorators = True
disallow_untyped_defs = True
warn_unreachable = True

[mypy-parsl.utils]
disallow_untyped_defs = True

[mypy-flask_sqlalchemy.*]
ignore_missing_imports = True

[mypy-networkx.*]
ignore_missing_imports = True

[mypy-_pytest.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-dill.*]
ignore_missing_imports = True

[mypy-copyreg.*]
ignore_missing_imports = True

[mypy-tblib.*]
ignore_missing_imports = True

[mypy-globus_sdk.*]
ignore_missing_imports = True

[mypy-psutil.*]
ignore_missing_imports = True

[mypy-cPickle.*]
ignore_missing_imports = True

[mypy-copy_reg.*]
ignore_missing_imports = True

[mypy-ipyparallel.*]
ignore_missing_imports = True

[mypy-ipython_genutils.*]
ignore_missing_imports = True

[mypy-cmreslogging.handlers.*]
ignore_missing_imports = True

[mypy-kubernetes.*]
ignore_missing_imports = True

[mypy-azure.*]
ignore_missing_imports = True

[mypy-msrestazure.*]
ignore_missing_imports = True

[mypy-googleapiclient.*]
ignore_missing_imports = True

[mypy-boto3.*]
ignore_missing_imports = True

[mypy-botocore.*]
ignore_missing_imports = True

[mypy-zmq.*]
ignore_missing_imports = True

[mypy-mpi4py.*]
ignore_missing_imports = True

[mypy-flask.*]
ignore_missing_imports = True

# this is an internal undocumentated package
# of multiprocessing - trying to get Event
# to typecheck in monitoring, but it's not
# a top level class as far as mypy is concerned.
# but... when commented out seems ok?
# so lets see when happens when I try to merge
# in clean CI
#[mypy-multiprocessing.synchronization.*]
#ignore_missing_imports = True

[mypy-pandas.*]
ignore_missing_imports = True

[mypy-ndcctools.*]
ignore_missing_imports = True

[mypy-work_queue.*]
ignore_missing_imports = True

[mypy-radical.*]
ignore_missing_imports = True

[mypy-oauth_ssh.*]
ignore_missing_imports = True

[mypy-flux.*]
ignore_missing_imports = True

[mypy-setproctitle.*]
ignore_missing_imports = True

[mypy-proxystore.*]
ignore_missing_imports = True
